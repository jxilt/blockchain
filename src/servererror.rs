use std::str::Utf8Error;
use std::io::Error;
use std::num::ParseIntError;
use std::sync::mpsc::SendError;

/// A common class for errors generated by the server.
#[derive(Debug)]
pub struct ServerError {
    pub(crate) message: String
}

impl ServerError {
    pub fn new(message: String) -> ServerError {
        ServerError { message }
    }
}

pub(crate) type Result<T> = std::result::Result<T, ServerError>;

impl From<Utf8Error> for ServerError {
    fn from(err: Utf8Error) -> Self {
        return ServerError::new(err.to_string());
    }
}

impl From<Error> for ServerError {
    fn from(err: Error) -> Self {
        return ServerError::new(err.to_string());
    }
}

impl From<SendError<u8>> for ServerError {
    fn from(err: SendError<u8>) -> Self {
        return ServerError::new(err.to_string());
    }
}

impl From<ParseIntError> for ServerError {
    fn from(err: ParseIntError) -> Self {
        return ServerError::new(err.to_string());
    }
}